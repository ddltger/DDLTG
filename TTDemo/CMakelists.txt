cmake_minimum_required (VERSION 3.7)

set(DEVELOPMENT_PROJECT_NAME "FontProj")                 # <== Set to your project name, e.g. project.xcodeproj
set(DEVELOPMENT_TEAM_ID "GY75F3QFTH")                       # <== Set to your team ID from Apple
set(APP_NAME "TTDemoApp")                                     # <== Set To your app's name
set(APP_BUNDLE_IDENTIFIER "com.berg.test")           # <== Set to your app's bundle identifier
set(CODE_SIGN_IDENTITY "iPhone Developer")                  # <== Set to your preferred code sign identity, to see list:
                                                            # /usr/bin/env xcrun security find-identity -v -p codesigning
set(DEPLOYMENT_TARGET 9.0)                                  # <== Set your deployment target version of iOS
set(DEVICE_FAMILY "1")                                      # <== Set to "1" to target iPhone, set to "2" to target iPad, set to "1,2" to target both
set(LOGIC_ONLY_TESTS 0)                                     # <== Set to 1 if you do not want tests to be hosted by the application, speeds up pure logic tests but you can not run them on real devices

project(${DEVELOPMENT_PROJECT_NAME})

set(PRODUCT_NAME ${APP_NAME})
set(EXECUTABLE_NAME ${APP_NAME})
set(MACOSX_BUNDLE_EXECUTABLE_NAME ${APP_NAME})
set(MACOSX_BUNDLE_INFO_STRING ${APP_BUNDLE_IDENTIFIER})
set(MACOSX_BUNDLE_GUI_IDENTIFIER ${APP_BUNDLE_IDENTIFIER})
set(MACOSX_BUNDLE_BUNDLE_NAME ${APP_BUNDLE_IDENTIFIER})
set(MACOSX_BUNDLE_ICON_FILE "")
set(MACOSX_BUNDLE_LONG_VERSION_STRING "1.0")
set(MACOSX_BUNDLE_SHORT_VERSION_STRING "1.0")
set(MACOSX_BUNDLE_BUNDLE_VERSION "1.0")
set(MACOSX_BUNDLE_COPYRIGHT "Copyright YOU")
set(MACOSX_DEPLOYMENT_TARGET ${DEPLOYMENT_TARGET})

set(APP_HEADER_FILES
  ./AppDelegate.h
  ./ViewController.h
  ./Prefix.pch
)

file(GLOB STB_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/stb/*.h")
list(APPEND APP_HEADER_FILES ${STB_HEADER_FILES})

file(GLOB EAGL_HEADER_FILES "${CMAKE_CURRENT_SOURCE_DIR}/AAPLEAGLLayer/*.h")
list(APPEND APP_HEADER_FILES ${EAGL_HEADER_FILES})

set(APP_SOURCE_FILES
  ./AppDelegate.m
  ./ViewController.mm
  ./main.m
)

file(GLOB EAGL_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/AAPLEAGLLayer/*.mm")
list(APPEND APP_SOURCE_FILES ${EAGL_SOURCE_FILES})


set(RESOURCES
  ./Main.storyboard
  ./LaunchScreen.storyboard
)

add_executable(
    ${APP_NAME}
    MACOSX_BUNDLE
    ${APP_HEADER_FILES}
    ${APP_SOURCE_FILES}
    ${RESOURCES}
)

# Build the C++ dynamically linked framework
# add_dependencies(${APP_NAME} ${FRAMEWORK_NAME})

# Build tests
# add_subdirectory(tests)

# Locate system libraries on iOS
find_library(UIKIT UIKit)
find_library(AVFOUNDATION AVFoundation)
find_library(OPENGLES OpenGLES)

# link the frameworks located above
target_link_libraries(${APP_NAME} ${UIKIT})
target_link_libraries(${APP_NAME} ${AVFOUNDATION})
target_link_libraries(${APP_NAME} ${OPENGLES})

# Turn on ARC
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fobjc-arc")

# Create the app target
set_target_properties(${APP_NAME} PROPERTIES
                      RESOURCE "${RESOURCES}"
                      XCODE_ATTRIBUTE_DEBUG_INFORMATION_FORMAT "dwarf-with-dsym"
                      XCODE_ATTRIBUTE_GCC_PREFIX_HEADER "${CMAKE_CURRENT_SOURCE_DIR}/Prefix.pch"
                      XCODE_ATTRIBUTE_GCC_PRECOMPILE_PREFIX_HEADER "YES"
                      MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_SOURCE_DIR}/plist.in
                      XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY ${CODE_SIGN_IDENTITY}
                      XCODE_ATTRIBUTE_DEVELOPMENT_TEAM ${DEVELOPMENT_TEAM_ID}
                      XCODE_ATTRIBUTE_TARGETED_DEVICE_FAMILY ${DEVICE_FAMILY}
                      XCODE_ATTRIBUTE_GCC_SYMBOLS_PRIVATE_EXTERN YES
)